# Default values for self-service-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

store_dav:
  environment: "staging"
  # -- Set to the base64 encoded htpasswd file
  auth_htpasswd: ""

image:
  registry: "registry.souvap-univention.de"
  repository: "souvap/tooling/images/store-dav/store-dav"
  pullPolicy: "Always"
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: false
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/portal-assets/$1"
    nginx.ingress.kubernetes.io/use-regex: "true"
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  # -- The path configuration. The default only grabs what is known to be part of the frontend.
  paths:
    - pathType: Prefix
      path: /univention/portal/(icons/entries/.*)
  tls:
    enabled: true
    secretName: ""

## Istio support
istio:
  # -- Set this to `true` in order to enable the installation on Istio related objects.
  enabled: true
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  virtualService:
    enabled: true
    annotations: {}
    # -- Allows to inject deployment specific path configuration which is configured before
    # the elements from `paths` below. This allows to redirect some paths to other services,
    # e.g. in order to supply a file `custom.css`.
    pathOverrides: []
    # -- The paths configuration. The default only grabs what is known to be
    # part of the frontend.
    #
    # `pathOverrides` is provided as a workaround so that specific sub-paths can
    # be redirected to other services.
    paths:
      - match: "prefix"
        path: "/univention/portal/icons/entries/"
        rewrite: "/portal-assets/icons/entries/"
  gateway:
    enabled: false
    annotations:
    selectorIstio: "ingressgateway"
    externalGatewayName: "swp-istio-gateway"
    tls:
      enabled: true
      httpsRedirect: true
      secretName: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  ports:
    http:
      containerPort: 80
      port: 80
      protocol: "TCP"
  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
